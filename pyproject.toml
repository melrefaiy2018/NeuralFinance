[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "stock-prediction-lstm"
dynamic = ["version"]
description = "A comprehensive stock prediction system using LSTM neural networks with sentiment analysis and technical indicators"
authors = [
    {name = "Mohamed A. A. Elrefaiy", email = "moerelfaiy@gmail.com"},
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: Jupyter",
    "Environment :: Console",
    "Environment :: Web Environment",
]
keywords = [
    "stock prediction",
    "lstm",
    "neural networks",
    "sentiment analysis",
    "technical analysis",
    "machine learning",
    "finance",
    "trading",
    "deep learning",
]
dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "tensorflow>=2.8.0",
    "yfinance>=0.1.87",
    "scikit-learn>=1.0.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
    "streamlit>=1.20.0",
    "flask>=2.0.0",
    "click>=8.0.0",
    "requests>=2.28.0",
    "nltk>=3.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "jupyter>=1.0.0",
    "notebook>=6.5.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-autodoc-typehints>=1.19.0",
    "myst-parser>=0.18.0",
]
jupyter = [
    "jupyter>=1.0.0",
    "notebook>=6.5.0",
    "ipywidgets>=8.0.0",
    "jupyterlab>=3.4.0",
]
web = [
    "streamlit>=1.25.0",
    "dash>=2.10.0",
    "plotly>=5.15.0",
]
gpu = [
    "tensorflow-gpu>=2.8.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/stock_prediction_lstm"
Documentation = "https://yourusername.github.io/stock_prediction_lstm/"
Repository = "https://github.com/yourusername/stock_prediction_lstm"
"Bug Tracker" = "https://github.com/yourusername/stock_prediction_lstm/issues"
Changelog = "https://github.com/yourusername/stock_prediction_lstm/blob/main/CHANGELOG.md"

[project.scripts]
stock-predict = "stock_prediction_lstm.cli.main:cli"

[tool.setuptools.dynamic]
version = {attr = "stock_prediction_lstm.__version__.version"}

[tool.setuptools.packages.find]
where = ["."]
include = ["stock_prediction_lstm*"]
exclude = ["tests*", "examples*", "docs*"]

[tool.setuptools.package-data]
stock_prediction_lstm = [
    "config/**/*",
    "data_cache/**/*",
    "web/static/**/*",
    "web/templates/**/*",
]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["stock_prediction_lstm"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "*/examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "yfinance.*",
    "tensorflow.*",
    "sklearn.*",
    "plotly.*",
    "streamlit.*",
    "flask.*",
    "nltk.*",
]
ignore_missing_imports = true

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    "venv",
]
